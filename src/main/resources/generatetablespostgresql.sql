DO $$
BEGIN
    IF EXISTS
    (SELECT 
      schema_name
    FROM 
      information_schema.schemata 
    WHERE 
      schema_name = 'lottery')
    THEN
      DROP SCHEMA lottery CASCADE; 
    END IF; 

    CREATE SCHEMA IF NOT EXISTS LOTTERY;

	CREATE TABLE LOTTERY.PLAYERS
	  ( 
	  id SERIAL NOT NULL, 
	  userName VARCHAR(60) NOT NULL, 
	  password VARCHAR(30) NOT NULL, 
	  firstName VARCHAR(30) NOT NULL,
	  lastName VARCHAR(30) NOT NULL,	  
	  sex INTEGER NOT NULL, 
	  identityCardNumber VARCHAR(10) NOT NULL,
	  dob INTEGER NOT NULL,
	  country VARCHAR(60) NOT NULL,
	  zipcode VARCHAR(8) NOT NULL,
	  address VARCHAR(100) NOT NULL,
	  phoneNumber VARCHAR(30),
	  email VARCHAR(30) NOT NULL,
	  createDate DATE NOT NULL,
	  CONSTRAINT PLAYERS_PK PRIMARY KEY (id)
	  );
	
	CREATE TABLE LOTTERY.OPERATORS
	   (	
	    id SERIAL NOT NULL, 
	    userName VARCHAR(60) NOT NULL, 
	    password VARCHAR(30) NOT NULL, 
  	    firstName VARCHAR(30) NOT NULL,
	    lastName VARCHAR(30) NOT NULL,	  
	    sex INTEGER NOT NULL,
	    country VARCHAR(60) NOT NULL,
	    zipcode VARCHAR(8) NOT NULL,
	    address VARCHAR(100) NOT NULL,
	    phoneNumber VARCHAR(30),
	    email VARCHAR(30) NOT NULL,
	    createDate DATE,
	    CONSTRAINT OPERATORS_PK PRIMARY KEY (id)
	   ); 
	   
	CREATE TABLE LOTTERY.TRANSACTIONS
	   (	
	    id SERIAL NOT NULL, 
	    type VARCHAR(10) NOT NULL,
		amount INTEGER NOT NULL,
		playerid INTEGER NOT NULL,
		operatorid INTEGER NOT NULL,
		createDate DATE NOT NULL,
		CONSTRAINT TRANSACTIONS_PK PRIMARY KEY (id),
		  CONSTRAINT TRANSACTIONS_PLAYERS_FK1 FOREIGN KEY (playerid)
		  REFERENCES LOTTERY.PLAYERS(id),
		  CONSTRAINT TRANSACTIONS_OPERATORS_FK2 FOREIGN KEY (operatorid)
		  REFERENCES LOTTERY.OPERATORS(id)
	   );

	CREATE TABLE LOTTERY.PERMISSIONS	
	   (
		id SERIAL NOT NULL,
		description VARCHAR(50) NOT NULL,
		CONSTRAINT PERMISSIONS_PK PRIMARY KEY (id)
	   );

	CREATE TABLE LOTTERY.OPERATORPERMISSIONMAP	
	   (
		id SERIAL NOT NULL,
		operatorid INTEGER NOT NULL,
		permissionid INTEGER NOT NULL,
		CONSTRAINT OPERATORPERMISSIONMAP_PK PRIMARY KEY (id),
		  CONSTRAINT OPERATORPERMISSIONMAP_OPERATORS_FK1 FOREIGN KEY (operatorid)
		  REFERENCES LOTTERY.OPERATORS(id),
		  CONSTRAINT OPERATORPERMISSIONMAP_PERMISSONS_FK2 FOREIGN KEY (permissionid)
		  REFERENCES LOTTERY.PERMISSIONS(id)
	   );

	CREATE TABLE LOTTERY.LOTTERYGAMES	
	   (
		id SERIAL NOT NULL,
		description VARCHAR(50) NOT NULL,
		baseStake INTEGER NOT NULL,
		gridSize INTEGER NOT NULL,
		numbersDrawn INTEGER NOT NULL,
		nrOfGrids INTEGER NOT NULL,
		minNrOfFox INTEGER NOT NULL,
		maxNrOfFix INTEGER NOT NULL,
		maxNrOfCombination INTEGER NOT NULL,
		createDate DATE NOT NULL,
		CONSTRAINT LOTTERYGAMES_PK PRIMARY KEY (id)
	   );
	
	CREATE TABLE LOTTERY.LOTTERYDRAWS	
	   (
		id SERIAL NOT NULL,
		baseStake INTEGER NOT NULL,
		gridSize INTEGER NOT NULL,
		numbersDrawn INTEGER NOT NULL,
		nrOfGrids INTEGER NOT NULL,
		minNrOfFox INTEGER NOT NULL,
		maxNrOfFix INTEGER NOT NULL,
		maxNrOfCombination INTEGER NOT NULL,
		year VARCHAR(22) NOT NULL,
		week VARCHAR(7) NOT NULL,
		status VARCHAR(7) NOT NULL,
		winningNumbers VARCHAR(100) NOT NULL,
		lotteryGameid INTEGER NOT NULL,
		createDate DATE NOT NULL,
		CONSTRAINT LOTTERYDRAWS_PK PRIMARY KEY (id),
		  CONSTRAINT LOTTERYDRAWS_LOTTERYGAMES_FK1 FOREIGN KEY (lotteryGameid)
		  REFERENCES LOTTERY.LOTTERYGAMES(id)
	   );

	CREATE TABLE LOTTERY.LOTTERYTICKETS
	   (
	    id SERIAL NOT NULL,
		playerid INTEGER NOT NULL,
		lotteryDrawid INTEGER NOT NULL,
		stake INTEGER NOT NULL,
		fixNumbers VARCHAR(100) NOT NULL,
		combinationNumbers VARCHAR(100) NOT NULL,
		createDate DATE NOT NULL,
		CONSTRAINT LOTTERYTICKETS_PK PRIMARY KEY (id),
		  CONSTRAINT LOTTERYTICKETS_PLAYERS_FK1 FOREIGN KEY (playerid)
		  REFERENCES LOTTERY.PLAYERS(id),
		  CONSTRAINT LOTTERYTICKETS_LOTTERYDRAWS_FK2 FOREIGN KEY (lotteryDrawid)
		  REFERENCES LOTTERY.LOTTERYDRAWS(id)
	   );
   
	CREATE TABLE LOTTERY.PRIZELEVELS
	   (
	    id SERIAL NOT NULL,
		lotteryDrawid INTEGER NOT NULL,
		winningPercentage INTEGER NOT NULL,
		level INTEGER NOT NULL,
		CONSTRAINT PRIZELEVELS_PK PRIMARY KEY (id),
		  CONSTRAINT PRIZELEVELS_LOTTERYDRAWS_FK1 FOREIGN KEY (lotteryDrawid)
		  REFERENCES LOTTERY.LOTTERYDRAWS(id)
		
	   );
	
	CREATE TABLE LOTTERY.SINGLESELECTIONS
	   (
	    id SERIAL NOT NULL,
		winningAmount INTEGER NOT NULL,
		selection VARCHAR(100) NOT NULL,
		lotteryTicketid INTEGER NOT NULL,
		prizeLevelid INTEGER NOT NULL,
		CONSTRAINT SINGLESELECTIONS_PK PRIMARY KEY (id),
		  CONSTRAINT SINGLESELECTIONS_LOTTERYTICKETS_FK1 FOREIGN KEY (lotteryTicketid)
		  REFERENCES LOTTERY.LOTTERYTICKETS(id),
		  CONSTRAINT SINGLESELECTIONS_PRIZELEVELS_FK2 FOREIGN KEY (prizeLevelid)
		  REFERENCES LOTTERY.PRIZELEVELS(id)
	   );

	INSERT INTO lottery.permissions(
            id, description)
    VALUES (1, 'Financial Transactions'),(2,'Lottery Games');

END$$;
   
   